[{"path":"/articles/chromatographR.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"chromatographR","text":"chromatographR package reproducible analysis HPLC-DAD data R. Liquid chromatography coupled diode-array detection (HPLC-DAD) remains one popular analytical methodologies due convenience low-cost. However, currently open-source tools available analyzing HPLC-DAD chromatograms. use proprietary software analysis HPLC-DAD data currently significant barrier reproducible science, since tools widely accessible, also tools often require user select complicated options graphical interface easily repeated. Reproducibility course much higher command line workflows, like chromatographR entire analysis can stored easily repeated anyone using publicly available software. chromatographR package draws inspiration previously published alsace package (Wehrens, Carvalho, Fraser 2015), improved functions peak-finding, integration peak table generation well number new tools data visualization checking. Unlike alsace, emphasized multivariate curve resolution alternating least squares (MCR-ALS), chromatographR focuses conventional workflow may seem familiar users standard software tools HPLC-DAD analysis. chromatographR includes tools ) pre-processing, b) retention-time alignment, c) peak-finding, d) peak-integration e) peak-table construction, well additional functions useful analysis resulting peak table.","code":""},{"path":[]},{"path":"/articles/chromatographR.html","id":"loading-data","dir":"Articles","previous_headings":"Workflow","what":"Loading data","title":"chromatographR","text":"cases, data coming spectrometer must first converted R-accessible format csv file. csv files gathered single directory (e.g. foo), load_chromes function provides simple interface import chromatograms.","code":"> # single folder > load_chroms(paths = path) >  > # multiple folders > path = 'foo' > folders <- list.files(path = path, pattern = \"EXPORT3D\") > dat <- load_chroms(folders)"},{"path":"/articles/chromatographR.html","id":"example-data","dir":"Articles","previous_headings":"Workflow","what":"Example data","title":"chromatographR","text":"included example data consisting root extracts tall goldenrod (Solidago altissima).","code":"> data(sa_shorter) Warning in data(sa_shorter): data set 'sa_shorter' not found"},{"path":"/articles/chromatographR.html","id":"pre-processing-data","dir":"Articles","previous_headings":"Workflow","what":"Pre-processing data","title":"chromatographR","text":"Experimental data can suffer number non-informative artifacts, noise (random non- random), shifting baseline, missing values. addition, data produced instrument may longer wavelength time ranges (higher resolution) need. Since HPLC-DAD data fairly smooth, relatively easy correct issues cases. example, smoothing can remove much noise spectral direction baseline subtraction can correct shifting baseline. Selection interpolation can used select time wavelength ranges resolutions want. functions available preprocess function. Smoothing baseline subtraction enabled default, providing alternative sets time points /wavelengths lead sub-sampling subsequent interpolation along one axes. can significantly reduce computational load later steps. baseline_cor function ptw package (Bloemberg et al. 2010) takes arguments p (asymmetry parameter) lambda (smoothing parameter). can read documentation ptw::asysm. may want experiment parameters choosing values use whole dataset.  loading data, may want normalize chromatograms (e.g. sample mass). However, can also normalize assembling peak table.","code":"> i=2 # chromatogram number in list of data > tpoints <- as.numeric(rownames(Sa[[i]])) > lambda='200.00000' >  > matplot(x=tpoints, y=Sa[[i]][,lambda], +        type='l', ylab='Abs (mAU)', xlab='Time (min)') > matplot(x=tpoints, y = ptw::baseline.corr(Sa[[i]][,lambda],p=.001,lambda=1e5), +        type='l', add = T, col='blue', lty = 3) > new.ts <- seq(10,18.66,by=.01) # choose time-points > new.lambdas <- seq(200, 318, by = 2) # choose wavelengths > dat.pr <- preprocess(Sa, dim1=new.ts, dim2=new.lambdas, +            parallel=F, p=.001, lambda=1e5)"},{"path":"/articles/chromatographR.html","id":"dealing-with-retention-time-shifts","dir":"Articles","previous_headings":"Workflow","what":"Dealing with retention time shifts","title":"chromatographR","text":"many cases, HPLC data can suffer retention time shifts (e.g. due temperature fluctuations, column degradation, subtle changes mobile-phase composition). Parametric time warping (implemented ptw package can quite effective technique correcting subtle retention time shifts (Eilers 2004). chromatograms already perfectly aligned can skip step. severe retention time shifts technique considerably less effective (consider checking HPLC leaks). correct_rt function wrapper around ptw function. chromatogram, produces “global” warping function across wavelengths included lambdas). goal warping function produce better alignment retention times “warping” time-axis chromatogram match reference chromatogram. reference chromatogram can selected manually determined algorithmically setting reference argument. code creates warping models samples provided list data matrices. function can used warp chromatogram according corresponding model, setting models parameter. can see , case, alignment considerably improved warping.  can sometimes informative also plot warping coefficients (e.g. find outliers), can easily accomplished using method shown :","code":"> warping.models <- correct_rt(dat.pr, what = \"models\", lambdas=c('210','260','318')) > warp <- correct_rt(chrom_list=dat.pr, models=warping.models) > par(mfrow=c(2,1)) > lambdas=c('210','260') > plot.new() > plot.window(xlim=c(head(new.ts,1),tail(new.ts,1)),ylim=c(0,1000)) > for (i in 1:length(warp)){ +   matplot(new.ts, warp[[i]][,lambdas],type='l',add=T) + } > legend(\"topright\", legend=\"warped\", cex=0.7, bty = \"n\") >  > plot.new() > plot.window(xlim=c(head(new.ts,1),tail(new.ts,1)),ylim=c(0,1000)) > for (i in 1:length(dat.pr)){ +   matplot(new.ts, dat.pr[[i]][,lambdas],type='l',add=T) + } > legend(\"topright\", legend=\"raw\", cex=0.7, bty = \"n\") > #par(mfrow=c(3,1)) > coef <- sapply(warping.models,function(x) x$warp.coef) > plot(coef[1,],pch=20,xlab='',ylab='') > plot(coef[2,],pch=20,xlab='',ylab='') > plot(coef[3,],pch=20,xlab='',ylab='')"},{"path":"/articles/chromatographR.html","id":"peak-finding-and-fitting","dir":"Articles","previous_headings":"Workflow","what":"Peak finding and fitting","title":"chromatographR","text":"get_peaks function loops chromatograms specified wavelengths, finds peaks, attempts fit specified function using non-linear least squares – current options gaussian egh (exponential-gaussian hybrid) (Lan Jorgenson 2001). area curve peak estimated using trapezoidal approximation method. function returns nested list dataframes containing information peaks chromatogram. plot.peak_list function allows visually assess peak integration accuracy. compare peaks fitted first chromatogram (index=1) using two algorithms. Usually egh function performs slightly better asymmetrical peaks.","code":"> pks_gauss <- get_peaks(warp, lambdas = c('210','260'), sd.max=40, fit=\"gaussian\") > pks_egh <- get_peaks(warp, lambdas = c('210', '260'), sd.max=40, fit=\"egh\") > par(mfrow=c(2,1)) > plot(pks_gauss, index=1, lambda='210') > plot(pks_egh, index=1, lambda='210') > pk_tab <- get_peaktable(pks_egh, response = \"area\") Warning in FUN(X[[i]], ...): More than one peak of one injection in the same cluster for component 1. Keeping only the most intense one. Warning in FUN(X[[i]], ...): More than one peak of one injection in the same cluster for component 2. Keeping only the most intense one. > head(pk_tab$tab[,1:6]) X1        X2        X3       X4        X5        X6 119 547.5999   0.00000  64.73611 188.9210 1514.4775  31.08266 121 426.2768 109.41736  61.30032   0.0000  800.6312   0.00000 122 839.5934  94.67302 199.57845   0.0000 2595.0200 179.59510 458 620.1729 228.73095 198.89770 530.8515 1399.5000  28.75473"},{"path":[]},{"path":"/articles/chromatographR.html","id":"plotting-spectra","dir":"Articles","previous_headings":"Workflow > Additional useful tools","what":"Plotting spectra","title":"chromatographR","text":"plot_spectrum function allows easily plot record spectra associated particular peak peak table. useful interpreting results /checking errors peak table. example, may want check spectra match particular peak peak table. may just want look spectrum peak interest. plot_spectrum function can used plot spectrum chromatographic trace using arguments plot_spectrum plot_trace. default plot data chromatogram biggest peak peak table, can choose chromatogram (wavelength trace) using chr lambda arguments.   plot_all_spectra function can used visually compare peaks given column peak table confirm match.","code":"> par(mfrow=c(2,1)) > peak=\"X8\" > plot_spectrum(peak, peak_table = pk_tab, chrom_list = warp) [1] \"chrome no. 4; RT: 12.59; lambda = 202 nm\" > peak=\"X23\" > plot_spectrum(peak, peak_table=pk_tab, chrom_list = warp) [1] \"chrome no. 2; RT: 16.25; lambda = 200 nm\" > peak=\"X8\" > plot_all_spectra(peak, peak_table=pk_tab, chrom_list = warp, export=F, overlapping=T)"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ethan Bass. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bass, E. (2022). chromatographR (version 0.3.0). https://github.com/ethanbass/chromatographR","code":"@Manual{,   title = {chromatographR},   author = {Ethan Bass},   year = {2022},   note = {version 0.3.0},   url = {https://github.com/ethanbass/chromatographR}, }"},{"path":"/index.html","id":"chromatographr","dir":"","previous_headings":"","what":"Import and analyze HPLC-DAD/UV data","title":"Import and analyze HPLC-DAD/UV data","text":"chromatographR package reproducible analysis HPLC-DAD chromatographic data R.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Import and analyze HPLC-DAD/UV data","text":"can install chromatographR GitHub using devtools package: build vignette, include argument build_vignettes=TRUE (Note: take considerably longer building package without vignette).","code":"install.packages(\"devtools\") devtools::install_github(\"https://github.com/ethanbass/chromatographR/\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Import and analyze HPLC-DAD/UV data","text":"Please see vignette included package details application chromatographR analysis HPLC data. chromatographR can now import ChemStation MassHunter file formats (using parsers included Aston package Python) well regular csv files.","code":""},{"path":"/reference/Sa.html","id":null,"dir":"Reference","previous_headings":"","what":"HPLC-DAD data of goldenrod root extracts. — Sa","title":"HPLC-DAD data of goldenrod root extracts. — Sa","text":"Four HPLC-DAD data matrices *Solidago altissima* roots extracted 90 percent methanol.","code":""},{"path":"/reference/Sa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HPLC-DAD data of goldenrod root extracts. — Sa","text":"list four matrices (time x wavelength).","code":""},{"path":"/reference/Sa_pr.html","id":null,"dir":"Reference","previous_headings":"","what":"HPLC-DAD data of goldenrod root extracts. — Sa_pr","title":"HPLC-DAD data of goldenrod root extracts. — Sa_pr","text":"Pre-processed chromatograms.","code":""},{"path":"/reference/Sa_pr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HPLC-DAD data of goldenrod root extracts. — Sa_pr","text":"Four pre-processed matrices (time x wavelength) use examples.","code":""},{"path":"/reference/Sa_warp.html","id":null,"dir":"Reference","previous_headings":"","what":"HPLC-DAD data of goldenrod root extracts. — Sa_warp","title":"HPLC-DAD data of goldenrod root extracts. — Sa_warp","text":"Pre-processed warped chromatograms.","code":""},{"path":"/reference/Sa_warp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HPLC-DAD data of goldenrod root extracts. — Sa_warp","text":"Four pre-processed warped matrices (time x wavelength) use examples.","code":""},{"path":"/reference/attach_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach experimental metadata — attach_metadata","title":"Attach experimental metadata — attach_metadata","text":"Attaches experimental meta-data peak_table object. One columns supplied meta-data must match exactly rownames peak_table.","code":""},{"path":"/reference/attach_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach experimental metadata — attach_metadata","text":"","code":"attach_metadata(peak_table, metadata, column)"},{"path":"/reference/attach_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach experimental metadata — attach_metadata","text":"peak_table Peak table metadata Dataframe column Name column sample names.","code":""},{"path":"/reference/attach_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach experimental metadata — attach_metadata","text":"Peak table meta-data.","code":""},{"path":[]},{"path":"/reference/attach_metadata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Attach experimental metadata — attach_metadata","text":"Ethan Bass","code":""},{"path":"/reference/attach_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach experimental metadata — attach_metadata","text":"","code":"if (FALSE) { meta <- read.csv(\"meta.csv\") pk_tab <- attach_metadata(peak_table = pk_tab, metadata = meta, column=\"vial\") }"},{"path":"/reference/attach_ref_spectra.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach reference spectra — attach_ref_spectra","title":"Attach reference spectra — attach_ref_spectra","text":"Gathers reference spectra attaches peak_table object. Reference  spectra defined either spectrum highest intensity ( 'ref == \"max.int\"') spectrum  highest average correlation spectra peak_table (ref == \"max.cor\"').","code":""},{"path":"/reference/attach_ref_spectra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach reference spectra — attach_ref_spectra","text":"","code":"attach_ref_spectra(   peak_table,   chrom_list = NULL,   ref = c(\"max.cor\", \"max.int\") )"},{"path":"/reference/attach_ref_spectra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach reference spectra — attach_ref_spectra","text":"peak_table Peak table get_peaktable. chrom_list list chromatograms matrix form (timepoints x wavelengths). ref criterion use select reference spectra. Current options maximum correlation (\"max.cor\") maximum signal intensity (\"max.int\").","code":""},{"path":"/reference/attach_ref_spectra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach reference spectra — attach_ref_spectra","text":"peak_table object reference spectra attached","code":""},{"path":[]},{"path":"/reference/attach_ref_spectra.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Attach reference spectra — attach_ref_spectra","text":"Ethan Bass","code":""},{"path":"/reference/attach_ref_spectra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach reference spectra — attach_ref_spectra","text":"","code":"if (FALSE) { ref_m <- attach_ref_spectra(pk_tab, ref = \"max.int\") }"},{"path":"/reference/chromatographR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"chromatographR — chromatographR-package","title":"chromatographR — chromatographR-package","text":"chromatographR","code":""},{"path":[]},{"path":"/reference/chromatographR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"chromatographR — chromatographR-package","text":"Ethan Bass Maintainer: Ethan Bass","code":""},{"path":"/reference/cluster_spectra.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to cluster peaks by spectral similarity. — cluster_spectra","title":"Function to cluster peaks by spectral similarity. — cluster_spectra","text":"Function cluster peaks spectral similarity. representative spectrum selected peak provided peak table used construct distance matrix based spectral similarity (pearson correlation) peaks. Currently, representative spectrum just selected chromatogram highest absorbance lambda max. Hierarchical clustering bootstrap resampling performed resulting correlation matrix, implemented pvclust package. Bootstrap values can used select clusters exceed certain confidence threshold defined alpha.","code":""},{"path":"/reference/cluster_spectra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to cluster peaks by spectral similarity. — cluster_spectra","text":"","code":"cluster_spectra(   peak_table,   chrom_list = NULL,   peak_no = c(5, 100),   alpha = 0.95,   nboot = 1000,   plot_dend = T,   plot_spectra = TRUE,   verbose = TRUE,   save = TRUE,   parallel = TRUE,   max.only = FALSE,   ... )"},{"path":"/reference/cluster_spectra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to cluster peaks by spectral similarity. — cluster_spectra","text":"peak_table Peak table get_peaktable. chrom_list list chromatograms matrix form (timepoints x wavelengths). peak_no Minimum maximum thresholds number peaks cluster may . alpha Confidence threshold inclusion cluster. nboot Number bootstrap replicates pvclust. plot_dend Logical. TRUE, plots dendrogram bootstrap values. plot_spectra Logical. TRUE, plots overlapping spectra cluster. verbose Logical. TRUE, prints progress report console. save Logical. TRUE, saves pvclust object current directory. parallel Logical. TRUE, use parallel processing pvclust. max.Logical. TRUE, returns highest level nested dendrograms. ... Additional arguments pvclust.","code":""},{"path":"/reference/cluster_spectra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to cluster peaks by spectral similarity. — cluster_spectra","text":"Returns S4 \"cluster\" object following components: peaks character vector containing names peaks contained given cluster. pval numeric vector length 1 containing boostrap p-value (au) given cluster.","code":""},{"path":"/reference/cluster_spectra.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to cluster peaks by spectral similarity. — cluster_spectra","text":"R. Suzuki, H. Shimodaira: Pvclust: R package assessing uncertainty hierarchical clustering. Bioinformatics, 22-12:1540-1542 (2006).","code":""},{"path":"/reference/cluster_spectra.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to cluster peaks by spectral similarity. — cluster_spectra","text":"Ethan Bass","code":""},{"path":"/reference/cluster_spectra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to cluster peaks by spectral similarity. — cluster_spectra","text":"","code":"if (FALSE) { cl <- cluster_spectra(pk_tab, nboot=100, max.only = F, save = F, alpha = .97) }"},{"path":"/reference/combine_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine peaks in peak table — combine_peaks","title":"Combine peaks in peak table — combine_peaks","text":"Utility function combine duplicate peaks peak table, .e. peaks integrated one wavelength component. Specify number digits match retention time minimum spectral correlation match.","code":""},{"path":"/reference/combine_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine peaks in peak table — combine_peaks","text":"","code":"combine_peaks(peak_table, tol = 0.01, min.cor = 0.9, choose = \"max\")"},{"path":"/reference/combine_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine peaks in peak table — combine_peaks","text":"peak_table Peak table get_peaktable. tol Tolerance matching retention times. min.cor Minimum spectral correlation confirm match. choose \"max\" retain peak highest intensity. Otherwise, first column data.frame retained.","code":""},{"path":"/reference/combine_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine peaks in peak table — combine_peaks","text":"peak table similar input peak table, duplicate columns combined according specified criteria.","code":""},{"path":[]},{"path":"/reference/combine_peaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine peaks in peak table — combine_peaks","text":"Ethan Bass","code":""},{"path":"/reference/combine_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine peaks in peak table — combine_peaks","text":"","code":"if (FALSE) { combine_peaks(pk_tab, tol = .02, min.cor = .9)}"},{"path":"/reference/correct_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct peak positions according to a ptw warping model — correct_peaks","title":"Correct peak positions according to a ptw warping model — correct_peaks","text":"appropriate warping model established, corrected retention times can predicted peak. stored separate column list peak tables.","code":""},{"path":"/reference/correct_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct peak positions according to a ptw warping model — correct_peaks","text":"","code":"correct_peaks(peak_list, mod_list)"},{"path":"/reference/correct_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct peak positions according to a ptw warping model — correct_peaks","text":"peak_list nested list peak tables: first level sample, second level component. Every component described matrix every row one peak, columns contain information retention time, full width half maximum (FWHM), peak width, height, area. mod_list list ptw models.","code":""},{"path":"/reference/correct_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct peak positions according to a ptw warping model — correct_peaks","text":"input list peak tables returned extra columns containing corrected retention time.","code":""},{"path":[]},{"path":"/reference/correct_peaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Correct peak positions according to a ptw warping model — correct_peaks","text":"Ron Wehrens","code":""},{"path":"/reference/correct_rt.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct retention time — correct_rt","title":"Correct retention time — correct_rt","text":"Corrects retention time differences using parametric time warping  implemented ptw.","code":""},{"path":"/reference/correct_rt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct retention time — correct_rt","text":"","code":"correct_rt(   chrom_list,   models = NULL,   lambdas = NULL,   reference = \"best\",   what = c(\"models\", \"corrected.values\"),   init.coef = c(0, 1, 0),   n.traces = NULL,   n.zeros = 0,   scale = TRUE,   trwdth = 200,   ... )"},{"path":"/reference/correct_rt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct retention time — correct_rt","text":"chrom_list List matrices containing concentration profiles. models List models warp . lambdas Select wavelengths use name. reference Index sample considered reference sample. return: either 'corrected.values' (useful visual inspection) warping 'models' (programmatic use). init.coef Starting values optimization. n.traces Number traces use. n.zeros Number zeros add. scale Logical. true, scale chromatograms warping. trwdth width triangle WCC criterion. ... Optional arguments ptw function. argument changed warp.type: always equal \"global\".","code":""},{"path":"/reference/correct_rt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct retention time — correct_rt","text":"list `ptw` objects list warped absorbance profiles.","code":""},{"path":"/reference/correct_rt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Correct retention time — correct_rt","text":"Adapted https://github.com/rwehrens/alsace/blob/master/R/correctRT.RcorrectRT function alsace package Ron Wehrens.","code":""},{"path":"/reference/correct_rt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correct retention time — correct_rt","text":"Eilers, P.H.C. 2004. Parametric Time Warping. Anal. Chem. 76:404-411. Wehrens, R., Bloemberg, T.G., Eilers P.H.C. 2015. Fast parametric time warping peak lists. Bioinformatics 31:3063-3065. Wehrens, R., Carvalho, E., Fraser, P.D. 2015. Metabolite profiling LC–DAD using multivariate curve resolution: alsace package R.  Metabolomics 11:1:143-154.","code":""},{"path":[]},{"path":"/reference/correct_rt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Correct retention time — correct_rt","text":"Ethan Bass","code":""},{"path":"/reference/correct_rt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correct retention time — correct_rt","text":"","code":"data(Sa_pr) warping.models <- correct_rt(Sa_pr, what = \"models\", lambdas=c(\"210\")) warp <- correct_rt(chrom_list = Sa_pr, models = warping.models)"},{"path":"/reference/filter_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter peak lists — filter_peaks","title":"Filter peak lists — filter_peaks","text":"Utility function remove peaks peak list, e.g. intensity low. Currently one can filter peak height, peak area, width half maximum.","code":""},{"path":"/reference/filter_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter peak lists — filter_peaks","text":"","code":"filter_peaks(peak_list, min_height, min_area, min_sd, max_sd)"},{"path":"/reference/filter_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter peak lists — filter_peaks","text":"peak_list peak_list object, consisting nester list peak tables, first level sample, second level  spectral component. Every component described matrix every row  one peak, columns contain information retention time,  full width half maximum (FWHM), peak width, height, area. min_height Minimum peak height. min_area Minimum peak area. min_sd Minimal standard deviation. max_sd Maximum standard deviation.","code":""},{"path":"/reference/filter_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter peak lists — filter_peaks","text":"peak list similar input peak_list, rows removed peak tables satisfying criteria.","code":""},{"path":[]},{"path":"/reference/filter_peaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter peak lists — filter_peaks","text":"Ron Wehrens, Ethan Bass","code":""},{"path":"/reference/find_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Find peaks in chromatographic profile — find_peaks","title":"Find peaks in chromatographic profile — find_peaks","text":"Find peaks chromatographic profile.","code":""},{"path":"/reference/find_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find peaks in chromatographic profile — find_peaks","text":"","code":"find_peaks(   y,   smooth_type = \"gaussian\",   smooth_window = 1,   smooth_width = 0.1,   slope_thresh = 0,   amp_thresh = 0,   bounds = TRUE )"},{"path":"/reference/find_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find peaks in chromatographic profile — find_peaks","text":"y response (numerical vector) smooth_type Type smoothing. (Defaults \"gaussian\"). smooth_window Window smoothing. (Defaults 1). smooth_width Width smoothing. (Defaults 0.1). slope_thresh Minimum threshold peak slope. (Defaults 0). amp_thresh Minimum threshold peak amplitude. (Defaults 0). bounds Logical. TRUE, includes peak boundaries data.frame. (Defaults TRUE).","code":""},{"path":"/reference/find_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find peaks in chromatographic profile — find_peaks","text":"bounds == T, returns data.frame containing center, start, end identified peak. Otherwise, returns numeric vector peak centers. locations expressed indices.","code":""},{"path":"/reference/find_peaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find peaks in chromatographic profile — find_peaks","text":"Find peaks function find_peaks looking zero-crossings smoothed first derivative signal exceed given slope threshold.","code":""},{"path":"/reference/find_peaks.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find peaks in chromatographic profile — find_peaks","text":"find_peaks function adapted matlab code Prof. Tom O'Haver's Pragmatic Introduction Signal Processing.","code":""},{"path":"/reference/find_peaks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find peaks in chromatographic profile — find_peaks","text":"O'Haver, Tom. Pragmatic Introduction Signal Processing: Applications scientific measurement. /hrefhttps://terpconnect.umd.edu/~toh/spectrum/ (Accessed January, 2022).","code":""},{"path":[]},{"path":"/reference/find_peaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find peaks in chromatographic profile — find_peaks","text":"Ethan Bass","code":""},{"path":"/reference/find_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find peaks in chromatographic profile — find_peaks","text":"","code":"data(Sa_pr) find_peaks(Sa_pr[[1]][,\"220\"]) #>    pos lower upper #> 1   28    15    46 #> 2   49    46    51 #> 3   60    54    61 #> 4   69    61    78 #> 5   81    78    84 #> 6   89    85    93 #> 7  104    93   114 #> 8  115   114   118 #> 9  120   118   123 #> 10 131   123   139 #> 11 141   139   146 #> 12 155   150   160 #> 13 167   161   171 #> 14 182   171   188 #> 15 193   188   200 #> 16 215   200   228 #> 17 233   228   238 #> 18 243   238   254 #> 19 261   254   264 #> 20 272   264   279 #> 21 283   279   293 #> 22 297   293   303 #> 23 305   303   308 #> 24 319   316   323 #> 25 336   323   347 #> 26 351   347   363 #> 27 378   363   383 #> 28 388   383   390 #> 29 395   390   401 #> 30 408   401   411 #> 31 417   411   421"},{"path":"/reference/fit_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit chromatographic peaks to an exponential-gaussian hybrid or gaussian\nprofile — fit_peaks","title":"Fit chromatographic peaks to an exponential-gaussian hybrid or gaussian\nprofile — fit_peaks","text":"Fit peak parameters using exponential-gaussian hybrid gaussian function.","code":""},{"path":"/reference/fit_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit chromatographic peaks to an exponential-gaussian hybrid or gaussian\nprofile — fit_peaks","text":"","code":"fit_peaks(   y,   pos = NULL,   sd.max = 50,   fit = c(\"egh\", \"gaussian\"),   max.iter = 1000,   ... )"},{"path":"/reference/fit_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit chromatographic peaks to an exponential-gaussian hybrid or gaussian\nprofile — fit_peaks","text":"y response (numerical vector) pos Locations peaks vector y. NULL, find_peaks run automatically find peak positions. sd.max Maximum width (standard deviation) peaks. Defaults 50. fit Function peak fitting. (Currently \"gaussian\" exponential gaussian hybrid (\"egh\") supported. Defaults egh.) max.iter Maximum number iterations use nonlinear least squares peak-fitting. (Defaults 1000). ... Additional arguments find_peaks.","code":""},{"path":"/reference/fit_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit chromatographic peaks to an exponential-gaussian hybrid or gaussian\nprofile — fit_peaks","text":"Function fit_peaks returns matrix, whose columns contain following information: rt location maximum peak (x) start start peak (included table `bounds==TRUE`) end end peak (included table `bounds==TRUE`) sd width peak (x) tau tau parameter (included table `fit==\"egh\"`) FWHM full width half maximum (x) height height peak (y) area peak area r.squared r-squared value linear fit model data. , first five elements (rt, start, end, sd FWHM) expressed indices, terms real retention times. transformation \"real\" time done function get_peaks.","code":""},{"path":"/reference/fit_peaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit chromatographic peaks to an exponential-gaussian hybrid or gaussian\nprofile — fit_peaks","text":"Peak parameters calculated using fit_peaks, fits data gaussian exponential-gaussian hybrid curve using non-linear least squares estimation implemented nlsLM. Area fitted curve estimated using trapezoidal estimation.","code":""},{"path":"/reference/fit_peaks.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit chromatographic peaks to an exponential-gaussian hybrid or gaussian\nprofile — fit_peaks","text":"fit_peaks function adapted Dr. Robert Morrison's DuffyTools package well code published Ron Wehrens' alsace package.","code":""},{"path":"/reference/fit_peaks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit chromatographic peaks to an exponential-gaussian hybrid or gaussian\nprofile — fit_peaks","text":"Lan, K. & Jorgenson, J. W. hybrid exponential gaussian functions simple model asymmetric chromatographic peaks. Journal Chromatography 915, 1-13 (2001). Naish, P. J. & Hartwell, S. Exponentially Modified Gaussian functions - good model chromatographic peaks isocratic HPLC? Chromatographia 26, 285-296 (1988).","code":""},{"path":[]},{"path":"/reference/fit_peaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit chromatographic peaks to an exponential-gaussian hybrid or gaussian\nprofile — fit_peaks","text":"Ethan Bass","code":""},{"path":"/reference/fit_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit chromatographic peaks to an exponential-gaussian hybrid or gaussian\nprofile — fit_peaks","text":"","code":"data(Sa_pr) fit_peaks(Sa_pr[[1]][,\"220\"]) #>           rt start end        sd           tau      FWHM      height #> 1   30.69582    15  46 6.2876089    1.20032657 14.775881   8.9910726 #> 2   50.87252    46  51 0.8609421  -11.40884987  2.023214   0.3652505 #> 3   61.44532    54  61 3.2042224    2.37308316  7.529923  12.7874585 #> 4   69.97526    61  78 2.7067311   -1.01879444  6.360818 118.1461826 #> 5   82.39452    78  84 1.3890785   -0.62739645  3.264334   1.5745430 #> 6   89.64284    85  93 1.5296385    0.61202489  3.594650   2.3360448 #> 7  104.49707    93 114 2.1826134   -0.19394681  5.129142 878.3558848 #> 8   81.85278   114 118 2.4020261   22.61826109  5.644761   9.6411867 #> 9  119.85327   118 123 5.2832726  -13.86056118 12.415691   8.5707183 #> 10 131.85675   123 139 1.8315236    0.11513595  4.304081 418.7796260 #> 11 141.10661   139 146 4.0598498   -4.07497282  9.540647   8.5085781 #> 12 156.08509   150 160 1.8010645    0.01466272  4.232502   5.8543152 #> 13 167.73853   161 171 1.6517982   -0.14556475  3.881726  25.5505898 #> 14 183.22815   171 188 2.0807233   -0.22145458  4.889700 350.1547326 #> 15 193.98654   188 200 2.4682084   -1.29245509  5.800290 119.6729349 #> 16 216.44045   200 228 1.8375563   -0.13007404  4.318257 319.6260534 #> 17 234.50440   228 238 1.9619252   -0.17648210  4.610524  35.8686113 #> 18 243.58113   238 254 4.9483855    0.66568411 11.628706  15.8252538 #> 19 262.00099   254 264 1.8302984   -0.98597517  4.301201  17.3957395 #> 20 272.87432   264 279 3.0837104    0.05107111  7.246719  96.9289225 #> 21 284.45995   279 293 1.8712197   -0.34947361  4.397366 121.3286776 #> 22 298.28530   293 303 2.0217365   -0.90317975  4.751081  14.6884289 #> 24 320.15708   316 323 1.2587749    0.34041774  2.958121   0.6212100 #> 25 336.89949   323 347 2.2339189   -0.82019091  5.249709 157.2481960 #> 26 351.82166   347 363 4.3854006    2.73641782 10.305691   7.1109632 #> 27 379.01651   363 383 9.6193330  -13.36671547 22.605433   3.8470521 #> 28 389.96461   383 390 0.4505309  -11.19848619  1.058748   5.0689224 #> 29 396.32753   390 401 7.3086176   -2.14828148 17.175251   6.6276427 #> 30 410.94946   401 411 1.7810651 -123.44164907  4.185503   5.5950637 #> 31 419.42472   411 421 4.8293969  -14.83514533 11.349083   7.4589610 #>           area r.squared #> 1   141.469804 0.9861795 #> 2     1.534341 0.2835405 #> 3    44.203814 0.9996774 #> 4   844.468381 0.9954198 #> 5     7.861763 0.9445200 #> 6     9.913595 0.9974965 #> 7  4895.362421 0.9991512 #> 8    37.726827 0.8292605 #> 9    36.686028 0.9637970 #> 10 2149.825149 0.9991802 #> 11   42.795027 0.9849679 #> 12   31.783431 0.9955796 #> 13  116.325582 0.9997472 #> 14 2159.863517 0.9987345 #> 15  749.502596 0.9870224 #> 16 1996.653868 0.9988400 #> 17  231.767485 0.9889112 #> 18  148.058990 0.8325458 #> 19   88.004196 0.9912112 #> 20  713.899661 0.9118992 #> 21  753.063437 0.9843055 #> 22   84.486071 0.9455491 #> 24    2.923790 0.9886961 #> 25  972.579140 0.9950354 #> 26   70.695957 0.7701393 #> 27   63.752468 0.9955775 #> 28   30.677295 0.9392470 #> 29   64.992481 0.8411157 #> 30   54.963920 0.8662737 #> 31   67.504644 0.8950062"},{"path":"/reference/get_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all peaks from a list of chromatograms. — get_peaks","title":"Extract all peaks from a list of chromatograms. — get_peaks","text":"Extracts peaks list chromatograms.","code":""},{"path":"/reference/get_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all peaks from a list of chromatograms. — get_peaks","text":"","code":"get_peaks(   chrom_list,   lambdas,   fit = c(\"egh\", \"gaussian\"),   sd.max = 50,   max.iter = 100,   ... )"},{"path":"/reference/get_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all peaks from a list of chromatograms. — get_peaks","text":"chrom_list list profile matrices, dimensions (timepoints x wavelengths). lambdas Character vector wavelengths find peaks . fit type fit use. Current options gaussian exponential gaussian hybrid. sd.max Maximum width (standard deviation) peaks. Defaults 50. max.iter Maximum number iterations non-linear least squares fit_peaks. ... Additional arguments find_peaks.","code":""},{"path":"/reference/get_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all peaks from a list of chromatograms. — get_peaks","text":"result list, element corresponding one data file, containing data fitted peaks ALS components. Note function presents \"rt\", \"sd\" \"FWHM\" fields real time units.","code":""},{"path":"/reference/get_peaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract all peaks from a list of chromatograms. — get_peaks","text":"Peaks located finding zero-crossings smoothed first derivative specified chromatographic traces (function find_peaks). given positions, exponential-gaussian hybrid (regular gaussian) function fit signal using fit_peaks). area calculated using trapezoidal approximation.","code":""},{"path":"/reference/get_peaks.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract all peaks from a list of chromatograms. — get_peaks","text":"Function adapted https://github.com/rwehrens/alsace/blob/master/R/getAllPeaks.RgetAllPeaks function authored Ron Wehrens.","code":""},{"path":"/reference/get_peaks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract all peaks from a list of chromatograms. — get_peaks","text":"Wehrens, R., Carvalho, E., Fraser, P.D. 2015. Metabolite profiling LC–DAD using multivariate curve resolution: alsace package R.  Metabolomics 11:1:143-154.","code":""},{"path":"/reference/get_peaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract all peaks from a list of chromatograms. — get_peaks","text":"Ethan Bass","code":""},{"path":"/reference/get_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract all peaks from a list of chromatograms. — get_peaks","text":"","code":"data(Sa_pr) pks <- get_peaks(Sa_pr, lambdas = c('210'), sd.max=50, fit=\"egh\")"},{"path":"/reference/get_peaktable.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert peak list into an ordered peak table — get_peaktable","title":"Convert peak list into an ordered peak table — get_peaktable","text":"Function returns peak_table object. first slot contains matrix intensities, rows correspond samples columns correspond aligned features. rest slots contain various meta-data peaks, samples, experimental settings.","code":""},{"path":"/reference/get_peaktable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert peak list into an ordered peak table — get_peaktable","text":"","code":"get_peaktable(   peak_list,   chrom_list = NULL,   response = c(\"area\", \"height\"),   use.cor = FALSE,   hmax = 0.2,   plot_it = FALSE,   ask = plot_it,   clust = c(\"rt\", \"sp.rt\"),   sigma.t = NULL,   sigma.r = 0.5,   deepSplit = FALSE,   out = c(\"data.frame\", \"matrix\") )"},{"path":"/reference/get_peaktable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert peak list into an ordered peak table — get_peaktable","text":"peak_list nested list peak tables: first level sample, second level component. Every component described matrix every row one peak, columns contain information retention time, full width half maximum (FWHM), peak width, height, area. chrom_list list chromatographic matrices. response indicator whether peak area peak height used intensity measure. Default peak area. use.cor Logical, indicating whether use corrected retention times (default) raw retention times (advised!). hmax Height complete linkage dendrogram cut. Can interpreted maximal inter-cluster retention time difference. plot_it Logical. TRUE, every component stripplot shown indicating clustering. ask Logical. Ask showing new plot? clust Specify whether perform hierarchical clustering based spectral similarity retention time (\"sp.rt\") retention time alone (\"rt\"). Defaults \"rt\". \"sp.rt\" option experimental  used caution. sigma.t Width gaussian retention time distance function. Controls weight retention time. sigma.r Width gaussian spectral similarity function. Controls weight spectral correlation. deepSplit Logical. Controls sensitivity cluster splitting. TRUE, return smaller clusters. See documentation cutreeDynamic. Specify \"data.frame\" \"matrix\" output. Defaults `data.frame`.","code":""},{"path":"/reference/get_peaktable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert peak list into an ordered peak table — get_peaktable","text":"function returns peak_table object, consisting following elements: `tab`: peak table -- data-frame intensities sample x peak configuration. peaks (columns). `pk_meta`: data.frame containing peak meta-data (e.g. spectral component, peak number, average retention time). `sample_meta`: data.frame sample meta-data. Must added using attach_metadata) `ref_spectra`: data.frame reference spectra (wavelength x peak configuration). Must added using attach_ref_spectra`args`: vector arguments given get_peaktable.","code":""},{"path":"/reference/get_peaktable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert peak list into an ordered peak table — get_peaktable","text":"function performs complete linkage clustering retention times across samples, cuts height given user (can understood maximal inter-cluster retention time difference) simple case based retention times. Clustering can also incorporate information spectral similarity using distance function adapted Broeckling et al., 2014: $$\\exp({-\\frac{(1-c_{ij})^2}{2\\sigma_r^2}})*\\exp({-\\frac{(1-(t_i - t_j)^2}{2\\sigma_t^2}})$$. two peaks sample assigned cluster, warning message printed console. warnings can usually ignored, one also consider reducing hmax variable. However, may  lead splitting peaks across multiple clusters. Another option filter peaks intensity remove small features.","code":""},{"path":"/reference/get_peaktable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert peak list into an ordered peak table — get_peaktable","text":"Adapted https://github.com/rwehrens/alsace/blob/master/R/getPeakTable.RgetPeakTable function alsace package Ron Wehrens.","code":""},{"path":"/reference/get_peaktable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert peak list into an ordered peak table — get_peaktable","text":"Broeckling, C. D., F. . Afsar, S. Neumann, . Ben-Hur, J. E. Prenni. 2014. RAMClust: Novel Feature Clustering Method Enables Spectral-Matching-Based Annotation Metabolomics Data. Anal. Chem. 86:6812-6817.","code":""},{"path":[]},{"path":"/reference/get_peaktable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert peak list into an ordered peak table — get_peaktable","text":"Ethan Bass","code":""},{"path":"/reference/get_peaktable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert peak list into an ordered peak table — get_peaktable","text":"","code":"data(Sa_pr) pks <- get_peaks(Sa_pr, lambdas = c('210')) get_peaktable(pks, response = \"area\") #> Warning: More than one peak of one injection in the same cluster #> for component 1. #> Keeping only the most intense one. #>           X1       X2       X3       X4        X5        X6         X7       X8 #> 119 260.9597  0.00000 30.92981 94.03383  769.4859  19.92870 4051.40350    0.000 #> 121 204.0379  0.00000 45.97627 23.82418    0.0000 389.30453    0.00000    0.000 #> 122 410.5215 48.67966 29.39020 98.19779 1294.4447  91.97236    0.00000 2981.014 #> 458 295.2217  0.00000 94.02964  0.00000  243.9648 741.83980   18.46819    0.000 #>             X9        X10        X11       X12       X13       X14       X15 #> 119  133.00682 2107.71843   78.53709  68.14431 116.36674 1848.3052  759.3063 #> 121 2863.55673   44.47693  912.78961   0.00000  42.84824  375.1831    0.0000 #> 122   55.55018   70.87332 1791.92740  61.76002 211.86240    0.0000 1580.3078 #> 458 5519.70162  207.40679 1673.15656 168.58992  68.12473  280.8577    0.0000 #>           X16      X17        X18       X19       X20       X21       X22 #> 119    0.0000 1695.406    0.00000 208.38958  69.35061 198.25494 96.610047 #> 121 1016.7917    0.000 1111.87828   0.00000  56.18324  86.16721  5.486941 #> 122  645.5042 1420.343   65.72994 111.60827   0.00000 151.87067 24.277725 #> 458 2121.5831    0.000 1242.67116  22.58176 244.87533 260.53421 13.762594 #>          X23      X24      X25      X26        X27       X28      X29       X30 #> 119 631.6451 739.0477   0.0000 121.2293  0.0000000 5.6158870 2.478254  884.5136 #> 121   0.0000 332.7662 600.6048   0.0000 38.8425554 0.6490484 2.676501  698.5696 #> 122 397.3674 130.5012 720.9317 139.0383  0.7108261 0.0000000 5.538164  830.4333 #> 458   0.0000 612.7060 741.7732 112.1529  0.0000000 0.0000000 1.658587 1179.0521 #>          X31      X32      X33      X34      X35      X36       X37 #> 119 98.06441 39.18598 45.47252 84.52052 51.17507 77.06908 114.02089 #> 121 28.76913 27.29513 26.30663 22.16925 54.14121  0.00000  85.32191 #> 122 48.49794 60.99947 61.25551 43.17413 64.44801  0.00000 205.86090 #> 458 54.02170 49.80864 71.31631 78.53060 72.78320  0.00000 186.14514"},{"path":"/reference/load_chroms.html","id":null,"dir":"Reference","previous_headings":"","what":"Import chromatograms. — load_chroms","title":"Import chromatograms. — load_chroms","text":"Convenience function import chromatograms list folders.","code":""},{"path":"/reference/load_chroms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import chromatograms. — load_chroms","text":"","code":"load_chroms(   paths,   find_files = TRUE,   format.in = c(\"csv\", \"chemstation\", \"masshunter\"),   sep = \",\",   dat = NULL,   ... )"},{"path":"/reference/load_chroms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import chromatograms. — load_chroms","text":"paths Path(s) chromatograms folders containing files find_files Logical. Set TRUE (default) providing function folder vector folders containing files. Otherwise, set toFALSE. format.Format files. sep Argument provided read.csv. Defaults \",\". dat Optional list chromatograms. list provided, function append newly imported chromatograms existing list. ... Additional arguments read.csv.","code":""},{"path":"/reference/load_chroms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import chromatograms. — load_chroms","text":"list chromatograms matrix format.","code":""},{"path":"/reference/load_chroms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import chromatograms. — load_chroms","text":"Chromatograms may CSVs, ChemStation .uv files, MassHunter  .sp files.","code":""},{"path":"/reference/load_chroms.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Import chromatograms. — load_chroms","text":"Relies file parsers https://github.com/bovee/astonAston package import ChemStation .uv MassHunter .sp files.","code":""},{"path":"/reference/load_chroms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import chromatograms. — load_chroms","text":"Ethan Bass","code":""},{"path":"/reference/load_chroms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import chromatograms. — load_chroms","text":"","code":"if (FALSE) { ###  import from single folder dat <- load_chromes(paths = path) ### import from multiple folders path = 'foo' folders <- list.files(path = path, pattern = \"EXPORT3D\") dat <- load_chroms(folders) }"},{"path":"/reference/plot.peak_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot fitted peak shapes. — plot.peak_list","title":"Plot fitted peak shapes. — plot.peak_list","text":"Visually assess integration accuracy plotting fitted peaks onto trace.","code":""},{"path":"/reference/plot.peak_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot fitted peak shapes. — plot.peak_list","text":"","code":"# S3 method for peak_list plot(   x,   ...,   chrom_list = NULL,   index = 1,   lambda = NULL,   points = FALSE,   ticks = FALSE,   a = 0.5,   cex.points = 0.5 )"},{"path":"/reference/plot.peak_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot fitted peak shapes. — plot.peak_list","text":"x Peak_list object. Output get_peaks function. ... Additional arguments plot function. chrom_list List chromatograms (retention time x wavelength matrices) index Index name chromatogram plotted. lambda Wavelength plotting. points Logical. TRUE, plot peak maxima. Defaults FALSE. ticks Logical. TRUE, mark beginning end peak. Defaults FALSE. Select \"alpha\"\" parameter controlling transparency shapes. cex.points Size points. Defaults 0.5","code":""},{"path":[]},{"path":"/reference/plot.peak_list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot fitted peak shapes. — plot.peak_list","text":"Ethan Bass","code":""},{"path":"/reference/plot.peak_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spectrum from peak table — plot.peak_table","title":"Plot spectrum from peak table — plot.peak_table","text":"Plots trace /spectrum given peak peak table.","code":""},{"path":"/reference/plot.peak_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spectrum from peak table — plot.peak_table","text":"","code":"# S3 method for peak_table plot(   x,   ...,   loc = NULL,   chrom_list = NULL,   what = \"peak\",   chr = \"max\",   lambda = \"max\",   plot_spectrum = TRUE,   plot_trace = TRUE,   box_plot = FALSE,   vars = NULL,   spectrum_labels = TRUE,   scale_spectrum = FALSE,   export_spectrum = FALSE,   verbose = TRUE )"},{"path":"/reference/plot.peak_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spectrum from peak table — plot.peak_table","text":"x peak table (output get_peaktable function). ... Additional arguments. loc name peak retention time wish extract spectral data. chrom_list list chromatograms matrix form (timepoints x wavelengths). look . Either \"peak\" extract spectral information certain peak, \"rt\" scan retention time, \"click\" manually select retention time clicking chromatogram. Defaults \"peak\". chr Numerical index chromatogram wish plot; \"max\" plot chromatogram largest signal; \"\" plot spectra chromatograms. lambda wavelength wish plot trace plot_chrom ==T /wavelength used determination signal abundance. plot_spectrum Logical. TRUE, plots spectrum chosen peak. Defaults TRUE. plot_trace Logical. TRUE, plots trace chosen peak lambda. Defaults TRUE. box_plot Logical. TRUE, plots box plot using categories defined vars. vars Independent variables boxplot. spectrum_labels Logical. TRUE, plots labels maxima spectral plot. Defaults TRUE. scale_spectrum Logical. TRUE, scales spectrum unit height. Defaults FALSE. export_spectrum Logical. TRUE, exports spectrum console. Defaults FALSE. verbose Logical. TRUE, prints verbose output console. Defaults TRUE.","code":""},{"path":"/reference/plot.peak_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot spectrum from peak table — plot.peak_table","text":"Can used confirm identity peak check particular column peak table represents single compound. Can also used create simple box-plots examine distribution peak respect variables defined sample metadata.","code":""},{"path":"/reference/plot.peak_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot spectrum from peak table — plot.peak_table","text":"Ethan Bass","code":""},{"path":"/reference/plot_all_spectra.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot all spectra for chosen peak. — plot_all_spectra","title":"Plot all spectra for chosen peak. — plot_all_spectra","text":"Plot multiple given peak peak table. Wrapper plot_spectrum.","code":""},{"path":"/reference/plot_all_spectra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot all spectra for chosen peak. — plot_all_spectra","text":"","code":"plot_all_spectra(   peak,   peak_table,   chrom_list = NULL,   chrs = \"all\",   plot_spectrum = T,   export_spectrum = TRUE,   scale_spectrum = TRUE,   overlapping = TRUE,   verbose = FALSE,   ... )"},{"path":"/reference/plot_all_spectra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot all spectra for chosen peak. — plot_all_spectra","text":"peak name peak plot (character format) peak_table peak table (output get_peaktable function) chrom_list list profile matrices, dimensions (timepoints x components). chrs Vector chromatograms plot. plot_spectrum Logical. TRUE, plots spectrum chosen peak. export_spectrum Logical. TRUE, exports spectrum console. Defaults FALSE. scale_spectrum Logical. TRUE, scales spectrum unit height. overlapping Logical. TRUE, plot spectra single plot. verbose Logical. TRUE, print verbose output console. ... Additional arguments plot_spectrum.","code":""},{"path":[]},{"path":"/reference/plot_all_spectra.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot all spectra for chosen peak. — plot_all_spectra","text":"Ethan Bass","code":""},{"path":"/reference/plot_all_spectra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot all spectra for chosen peak. — plot_all_spectra","text":"","code":"data(Sa_warp) pks <- get_peaks(Sa_warp, lambda=\"220\") pk_tab <- get_peaktable(pks) #> Warning: More than one peak of one injection in the same cluster #> for component 1. #> Keeping only the most intense one. plot_all_spectra(peak=\"X13\", peak_table = pk_tab, overlapping=TRUE)  #>               119         121         122         458 #>  [1,] 0.705605352 0.721774728 0.672891424 0.660076184 #>  [2,] 0.666566235 0.682533059 0.631632120 0.619582145 #>  [3,] 0.639828325 0.654786683 0.601894646 0.592153389 #>  [4,] 0.629604967 0.639355186 0.587599489 0.577283828 #>  [5,] 0.637963109 0.641340942 0.592875079 0.580645029 #>  [6,] 0.674024870 0.668852880 0.626967058 0.612621223 #>  [7,] 0.738361334 0.723060403 0.689335863 0.671238033 #>  [8,] 0.815897295 0.791311580 0.766935180 0.745974891 #>  [9,] 0.885247535 0.852627468 0.839457859 0.815727784 #> [10,] 0.928512942 0.891675045 0.887117083 0.860325005 #> [11,] 0.938740580 0.897953705 0.896685989 0.870467047 #> [12,] 0.904839810 0.864976043 0.864807199 0.840381165 #> [13,] 0.832461387 0.796210949 0.796486903 0.773555707 #> [14,] 0.749809123 0.720294898 0.720677163 0.700302824 #> [15,] 0.694362411 0.671373716 0.671447848 0.654540550 #> [16,] 0.671735502 0.655726308 0.655097887 0.642136997 #> [17,] 0.676023188 0.668479800 0.666663536 0.657618901 #> [18,] 0.691122190 0.690293529 0.687032258 0.681328519 #> [19,] 0.702322168 0.705652809 0.702326826 0.699365798 #> [20,] 0.706357756 0.711263767 0.707665732 0.707463402 #> [21,] 0.705195711 0.711001858 0.707459945 0.709000774 #> [22,] 0.703346988 0.710580838 0.706704134 0.709937793 #> [23,] 0.698321510 0.705997836 0.701378712 0.707295501 #> [24,] 0.682770633 0.691455298 0.685764236 0.693669358 #> [25,] 0.649877245 0.660940382 0.654149556 0.662473131 #> [26,] 0.598053333 0.609362764 0.602349204 0.611730692 #> [27,] 0.527156850 0.539126972 0.531770959 0.540381548 #> [28,] 0.437672765 0.451043107 0.442704635 0.451147181 #> [29,] 0.336572751 0.351248278 0.342554416 0.351208133 #> [30,] 0.235116235 0.250507867 0.241342544 0.250562431 #> [31,] 0.144149256 0.159167163 0.149788855 0.159643612 #> [32,] 0.072954163 0.086122858 0.077684992 0.087315804 #> [33,] 0.025353145 0.035340636 0.028842247 0.035574906 #> [34,] 0.001476891 0.006476636 0.002880655 0.006377858 #> [35,] 0.000000000 0.000000000 0.000000000 0.000000000 #> [36,] 0.019658639 0.016587678 0.018184894 0.015771991 #> [37,] 0.059489212 0.052742726 0.055795723 0.050987060 #> [38,] 0.114010628 0.103687770 0.108710291 0.101321171 #> [39,] 0.178097577 0.165225019 0.171953432 0.162387163 #> [40,] 0.251178908 0.235203276 0.241546832 0.231103376 #> [41,] 0.328079302 0.309591315 0.316750949 0.304787928 #> [42,] 0.406033317 0.384377694 0.393436182 0.380392216 #> [43,] 0.483521210 0.459829627 0.469612859 0.455844260 #> [44,] 0.558001034 0.532987556 0.542989156 0.530133758 #> [45,] 0.625170760 0.600783052 0.611406314 0.598320559 #> [46,] 0.685045014 0.661465130 0.672097471 0.658942915 #> [47,] 0.738002174 0.714187717 0.723582228 0.712243260 #> [48,] 0.782401236 0.760021885 0.768876333 0.758852220 #> [49,] 0.819799224 0.797921297 0.806466714 0.796493697 #> [50,] 0.845953580 0.826671941 0.834348160 0.825567143 #> [51,] 0.864888152 0.846779679 0.854262296 0.846004770 #> [52,] 0.875532989 0.860099596 0.866156946 0.858919916 #> [53,] 0.880515467 0.868705216 0.872827477 0.867266177 #> [54,] 0.884136642 0.875082949 0.878091861 0.874268498 #> [55,] 0.890240063 0.883300591 0.885477153 0.882679217 #> [56,] 0.898994374 0.895189731 0.896187831 0.894446950 #> [57,] 0.913480875 0.910673972 0.911141089 0.910612468 #> [58,] 0.935441880 0.933572485 0.933757200 0.933867174 #> [59,] 0.964839552 0.964213757 0.964361527 0.964537731 #> [60,] 1.000000000 1.000000000 1.000000000 1.000000000"},{"path":"/reference/plot_spectrum.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spectrum from peak table — plot_spectrum","title":"Plot spectrum from peak table — plot_spectrum","text":"Plots trace /spectrum given peak peak.table object, plots spectrum particular retention time given chromatogram.","code":""},{"path":"/reference/plot_spectrum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spectrum from peak table — plot_spectrum","text":"","code":"plot_spectrum(   loc,   peak_table = NULL,   chrom_list = NULL,   chr = \"max\",   lambda = \"max\",   plot_spectrum = TRUE,   plot_trace = TRUE,   spectrum_labels = TRUE,   scale_spectrum = FALSE,   export_spectrum = FALSE,   verbose = TRUE,   what = c(\"peak\", \"rt\", \"click\"),   ... )"},{"path":"/reference/plot_spectrum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spectrum from peak table — plot_spectrum","text":"loc name peak retention time wish extract spectral data. peak_table peak table (output get_peaktable function). chrom_list list chromatograms matrix form (timepoints x wavelengths). chr Numerical index chromatogram wish plot, \"max\" automatically plot chromatogram largest signal. lambda wavelength wish plot trace plot_trace == TRUE /wavelength used determination signal abundance. plot_spectrum Logical. TRUE, plots spectrum chosen peak. Defaults TRUE. plot_trace Logical. TRUE, plots trace chosen peak lambda. Defaults TRUE. spectrum_labels Logical. TRUE, plots labels maxima spectral plot. Defaults TRUE. scale_spectrum Logical. TRUE, scales spectrum unit height. Defaults FALSE. export_spectrum Logical. TRUE, exports spectrum console. Defaults FALSE. verbose Logical. TRUE, prints verbose output console. Defaults TRUE. look . Either \"peak\" extract spectral information certain peak, \"rt\" scan retention time, \"click\" manually select retention time clicking chromatogram. Defaults \"peak\" mode. ... Additional arguments.","code":""},{"path":"/reference/plot_spectrum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot spectrum from peak table — plot_spectrum","text":"Can used confirm identity peak check particular column peak table represents single compound. Retention times can also selected clicking plotted trace == 'click'.","code":""},{"path":"/reference/plot_spectrum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot spectrum from peak table — plot_spectrum","text":"Ethan Bass","code":""},{"path":"/reference/plot_spectrum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spectrum from peak table — plot_spectrum","text":"","code":"data(Sa) pks <- get_peaks(Sa,lambda=\"220.00000\") pk_tab <- get_peaktable(pks) #> Warning: More than one peak of one injection in the same cluster #> for component 1. #> Keeping only the most intense one. par(mfrow=c(2,1)) plot_spectrum(loc = \"X10\", peak_table = pk_tab, what=\"peak\") #> Error in int_abline(a = a, b = b, h = h, v = v, untf = untf, ...): plot.new has not been called yet"},{"path":"/reference/preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess time/wavelength data — preprocess","title":"Preprocess time/wavelength data — preprocess","text":"Standard pre-processing response matrices, consisting time axis spectral axis (e.g. HPLC-DAD/UV data). smooth data, like UV-VIS data, size matrix can reduced interpolation. default, data baseline-corrected time direction smoothed  spectral dimension.","code":""},{"path":"/reference/preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess time/wavelength data — preprocess","text":"","code":"preprocess(   X,   dim1,   dim2,   remove.time.baseline = TRUE,   spec.smooth = TRUE,   maxI,   parallel = TRUE,   mc.cores = 2,   ... )"},{"path":"/reference/preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess time/wavelength data — preprocess","text":"X numerical data matrix, list data matrices. Missing values allowed. rownames colnames attributes used, numerical signify time points wavelengths, respectively. dim1 new, usually shorter, set time points (numerical). range outside range original time points, otherwise function stops error message. dim2 new, usually shorter, set wavelengths (numerical). range outside range original wavelengths, otherwise function stops error message. remove.time.baseline Logical, indicating whether baseline correction done time direction, according baseline.corr. Default TRUE. spec.smooth Logical, indicating whether smoothing done spectral direction, according smooth.spline. Default TRUE. maxI given, maximum intensity matrix set value. parallel Logical, indicating whether use parallel processing. Defaults TRUE. mc.cores many cores use parallel processing. Defaults 2. ... optional arguments baseline.corr.","code":""},{"path":"/reference/preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess time/wavelength data — preprocess","text":"function returns preprocessed data matrix, rownames colnames indicating time points wavelengths, respectively.","code":""},{"path":"/reference/preprocess.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Preprocess time/wavelength data — preprocess","text":"Adapted https://github.com/rwehrens/alsace/blob/master/R/preprocess.Rpreprocess function alsace package Ron Wehrens.","code":""},{"path":"/reference/preprocess.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Preprocess time/wavelength data — preprocess","text":"Wehrens, R., Carvalho, E., Fraser, P.D. 2015. Metabolite profiling LC–DAD using multivariate curve resolution: alsace package R.  Metabolomics 11:1:143-154.","code":""},{"path":"/reference/preprocess.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Preprocess time/wavelength data — preprocess","text":"Ethan Bass","code":""},{"path":"/reference/preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess time/wavelength data — preprocess","text":"","code":"data(Sa) new.ts <- seq(10,18.66,by=.01) # choose time-points new.lambdas <- seq(200, 318, by = 2) # choose wavelengths Sa_pr <- preprocess(Sa[[1]], dim1 = new.ts, dim2 = new.lambdas)"},{"path":"/reference/scan_chrom.html","id":null,"dir":"Reference","previous_headings":"","what":"Scan spectrum — scan_chrom","title":"Scan spectrum — scan_chrom","text":"Convenience function call plot_spectrum = \"click\".","code":""},{"path":"/reference/scan_chrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scan spectrum — scan_chrom","text":"","code":"scan_chrom(   chrom_list,   lambda,   chr = NULL,   peak_table = NULL,   scale_spectrum = FALSE,   spectrum_labels = TRUE,   export_spectrum = FALSE,   ... )"},{"path":"/reference/scan_chrom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scan spectrum — scan_chrom","text":"chrom_list list chromatograms matrix form (timepoints x wavelengths). lambda wavelength plot trace . chr Numerical index chromatogram wish plot. peak_table peak table (output get_peaktable function). scale_spectrum Logical. TRUE, scales spectrum unit height. Defaults FALSE. spectrum_labels Logical. TRUE, plots labels maxima spectral plot. Defaults TRUE. export_spectrum Logical. TRUE, exports spectrum console. Defaults FALSE. ... Additional arguments.","code":""},{"path":"/reference/scan_chrom.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scan spectrum — scan_chrom","text":"Ethan Bass","code":""},{"path":"/reference/scan_chrom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scan spectrum — scan_chrom","text":"","code":"data(Sa_pr) scan_chrom(Sa_pr, lambda=\"210\", chr=2, export_spectrum=T) #> [1] \"Click trace to select timepoint\" #> [1] \"chrome no. 2; RT: ; lambda = 210 nm\" #> Error in matplot(x = new.lambdas, y = y, type = \"l\", ylab = \"Intensity\",     xlab = \"Wavelength (nm)\", ylim = c(0, max(y) * 1.2), ...): 'x' and 'y' must have same number of rows"}]
