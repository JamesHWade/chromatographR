% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_spectrum.R
\name{plot.peak_table}
\alias{plot.peak_table}
\title{Plot spectrum from peak table}
\usage{
\method{plot}{peak_table}(
  x,
  ...,
  loc = NULL,
  chrom_list = NULL,
  chr = "max",
  lambda = "max",
  plot_spectrum = TRUE,
  plot_trace = TRUE,
  box_plot = FALSE,
  spectrum_labels = TRUE,
  scale_spectrum = FALSE,
  export_spectrum = FALSE,
  verbose = TRUE,
  vars = NULL
)
}
\arguments{
\item{x}{The peak table (output from \code{\link{get_peaktable}}
function).}

\item{...}{Additional arguments.}

\item{loc}{The name of the peak or retention time for which you wish to
extract spectral data.}

\item{chrom_list}{A list of chromatograms in matrix form (timepoints x
wavelengths).}

\item{chr}{Numerical index of chromatogram you wish to plot; "max" to
plot the chromatogram with the largest signal; or "all" to plot spectra
for all chromatograms.}

\item{lambda}{The wavelength you wish to plot the trace at if
plot_chrom ==T and/or the wavelength to be used for the determination
of signal abundance.}

\item{plot_spectrum}{Logical. If TRUE, plots the spectrum of the chosen
peak. Defaults to TRUE.}

\item{plot_trace}{Logical. If TRUE, plots the trace of the chosen peak at
lambda. Defaults to TRUE.}

\item{box_plot}{Logical. If TRUE, plots box plot using categories
defined by \code{vars}.}

\item{spectrum_labels}{Logical. If TRUE, plots labels on maxima in spectral
plot. Defaults to TRUE.}

\item{scale_spectrum}{Logical. If TRUE, scales spectrum to unit height.
Defaults to FALSE.}

\item{export_spectrum}{Logical. If TRUE, exports spectrum to console.
Defaults to FALSE.}

\item{verbose}{Logical. If TRUE, prints verbose output to console. Defaults
to TRUE.}

\item{vars}{Independent variables for boxplot.}
}
\description{
A function to plot the trace and/or spectrum for a given peak in peak table.
Can be used to confirm the identity of a peak or check that a particular
column in the peak table represents a single compound.
}
\author{
Ethan Bass
}
