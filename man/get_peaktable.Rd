% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_peaktable.R
\name{get_peaktable}
\alias{get_peaktable}
\title{Convert peak list into an ordered peak table}
\usage{
get_peaktable(
  peak_list,
  chrom_list = NULL,
  response = c("area", "height"),
  use.cor = FALSE,
  hmax = 0.2,
  plot_it = FALSE,
  ask = plot_it,
  clust = c("rt", "sp.rt"),
  sigma.t = NULL,
  sigma.r = 0.5,
  deepSplit = FALSE,
  out = c("data.frame", "matrix")
)
}
\arguments{
\item{peak_list}{A nested list of peak tables: the first level is the
sample, and the second level is the component. Every component is described
by a matrix where every row is one peak, and the columns contain information
on retention time, full width at half maximum (FWHM), peak width, height,
and area.}

\item{chrom_list}{A list of chromatographic matrices.}

\item{response}{An indicator whether peak area or peak height is to be used
as intensity measure. Default is peak area.}

\item{use.cor}{Logical, indicating whether to use corrected retention times
(by default) or raw retention times (not advised!).}

\item{hmax}{Height at which the complete linkage dendrogram will be cut. Can
be interpreted as the maximal inter-cluster retention time difference.}

\item{plot_it}{Logical. If TRUE, for every component a stripplot will be
shown indicating the clustering.}

\item{ask}{Logical. Ask before showing new plot?}

\item{clust}{Specify whether to perform hierarchical clustering based on
spectral similarity and retention time ("sp.rt") or retention time alone
("rt"). Defaults to "rt". The "sp.rt" option is experimental and should be 
used with some caution.}

\item{sigma.t}{Width of gaussian in retention time distance function.
Controls weight of retention time.}

\item{sigma.r}{Width of gaussian in spectral similarity function. Controls
weight of spectral correlation.}

\item{deepSplit}{Logical. Controls sensitivity to cluster splitting. If
TRUE, will return more smaller clusters. See documentation for
\code{\link{cutreeDynamic}}.}

\item{out}{Specify "data.frame" or "matrix" as output. Defaults to
`data.frame`.}
}
\value{
The function returns a peak_table object, consisting of the following
elements:
`tab`: the peak table itself -- a data-frame of intensities in a
sample x peak configuration.
peaks (columns).
`pk_meta`: A data.frame containing peak meta-data (e.g. spectral component,
peak number, and average retention time).
`sample_meta`: A data.frame of sample meta-data, added using \code{\link{attach_metadata}})
`ref_spectra`: A data.frame of reference spectra in a wavelength x peak
configuration. Must be added using \code{\link{attach_ref_spectra}}
`args`: Vector of arguments given to \code{\link{get_peaktable}}.
}
\description{
Function returns a matrix of intensities, where rows correspond to samples
and columns correspond to aligned features. The function performs a complete
linkage clustering of retention times across all samples, and cuts at a
height given by the user (which can be interpreted as the maximal
inter-cluster retention time difference) in the simple case based on
retention times. If two peaks from the same sample are assigned to the same
cluster, a warning message is given.
}
\details{
The clustering based on spectral similarity used a distance function adapted
from Broeckling et al., 2014:
\deqn{\exp({-\frac{(1-c_{ij})^2}{2\sigma_r^2}})*\exp({-\frac{(1-(t_i -
t_j)^2}{2\sigma_t^2}})} If one sees warnings about peaks from the same
sample sharing a cluster label, one option is to reduce the \code{maxdiff}
variable - this, however, will increase the number of clusters. Another
option is to filter the peaks on intensity: perhaps one of the two peaks in
the cluster is only a very small feature.
}
\note{
Adapted from getPeakTable function in alsace package by Ron Wehrens.
}
\examples{
\dontrun{
data(Sa)
new.ts <- seq(1,38,by=.01) # choose time-points
new.lambdas <- seq(200, 400, by = 2) # choose wavelengths
dat.pr <- lapply(X=Sa,FUN=preprocess,
                 dim1=new.ts,
                 dim2=new.lambdas)
warping.models <- correct_rt(dat.pr, what = "models", lambdas=c('210','260','360'))
warp <- correct_rt(chrom_list=dat.pr, models=warping.models)
pks <- get_peaks(warp, lambdas="210")
get_peaktable(pks, response = "area")
}
}
\references{
Broeckling, C. D., F. A. Afsar, S. Neumann, A. Ben-Hur, and J.
E. Prenni. 2014. RAMClust: A Novel Feature Clustering Method Enables
Spectral-Matching-Based Annotation for Metabolomics Data. \emph{Anal. Chem.}
\bold{86}:6812-6817.
}
\seealso{
\code{\link{attach_ref_spectra}} \code{\link{attach_metadata}}
}
\author{
Ethan Bass
}
